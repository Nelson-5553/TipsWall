---
import Layout from "../layouts/Layout.astro";
import Pagination from "../components/Pagination.astro";
import { fetchFromApi } from '../lib/api';

interface Post {
  post_name: string;
  excerpt: string;
  published_at?: string;
}

const result = await fetchFromApi('api/posts', {
  headers: {
    Authorization: `Bearer 1|2NkvUTndyWJr3UshZvyaEofVHPsZiVy8vLF9ME0u2d4c6169`
  }
});

const posts: Post[] = result.data;
const currentPage = result.meta?.current_page ?? 1;
const lastPage = result.meta?.last_page ?? 1;
---

<Layout>
  <div class="flex justify-center items-center min-h-screen p-6">
    <div class="max-w-6xl mx-auto space-y-6">
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2">
        {
          posts.map((post) => (
            <div class="bg-white shadow-md rounded-lg p-6 hover:shadow-lg transition relative h-full">
              <div>
                <h2 class="text-xl font-bold text-gray-800 mb-2">
                  {post.post_name}
                </h2>

                <p class="text-gray-600 h-16 text-sm mb-4">{post.excerpt}...</p>
              </div>

              <div class="text-xs text-gray-500">
                Publicado el {post.published_at ?? "fecha no disponible"}
              </div>
            </div>
          ))
        }
      </div>

      <!-- Paginación: si más adelante implementas paginación dinámica, puedes colocarla aquí -->
      <div class="mt-8 text-center text-sm text-gray-500">
        <Pagination
          currentPage={currentPage}
          lastPage={lastPage}
          basePath="/posts"
        />
      </div>
    </div>
  </div>
</Layout>
