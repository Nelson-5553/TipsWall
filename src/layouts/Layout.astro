---
import Nav from "../components/Nav.astro";
import "../styles/global.css";

import { API_USER } from 'astro:env/server';
import { fetchFromApi } from '../lib/api/api';

const token = Astro.cookies.get('token')?.value;
let message = '';
type User = {
  name: string;
};

let result: { message: string; user: User | null } = { message: 'No hay sesión activa', user: null }; // Valor por defecto

if (token) {
  try {
    result = await fetchFromApi(API_USER, {
      headers: {
        Authorization: `Bearer ${token}`,
        Accept: 'application/json'
      }
    });
    
    console.log('RESULT:', result);
    message = result.message || ''; // Asignar message desde el resultado
    console.log('Mensaje:', message);
  } catch (err) {
    console.error('Error al autenticar:', err);
    message = 'Error al autentica';
    result = { message, user: null }; // Actualizar result en caso de error
  }
}

const login = result; // Ahora result siempre estará definido
console.log('Login:', login);
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/lightbulb.svg" />
		<meta name="generator" content={Astro.generator} />
		<script src="../lib/plugins/alpine.js"></script>
		<title>TipsWall</title>
	</head>
	<body class="min-h-screen bg-white">
		<div class="fixed inset-0 z-[-2] w-full h-full rotate-180 transform bg-white bg-[radial-gradient(60%_120%_at_50%_50%,hsla(0,0%,100%,0)_0,rgba(252,205,238,.5)_100%)]"></div>
		<Nav name={login.user?.name ? login.user.name : login.message}
/>
		<slot />
	  </body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
